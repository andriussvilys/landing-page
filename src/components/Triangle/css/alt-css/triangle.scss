@import '../../../../css/css/consts';

$borderColor: $accent_primary;
$animationDuration: 7.3s;

$circleBoundRadius: 100%;

$squareRootOf3: 1.73205;
$triangleEdge: (3 * 50%) / $squareRootOf3;
$triangleHeight: ($triangleEdge * $squareRootOf3) / 2;

$container-angle: -60deg;

$circleHeight: 70px;
$circleWidth: 70px;
$circleRadius: $circleHeight / 2;
$circleBorder: 3px;

$circle-1-angle: 60deg;
$circle-2-angle: 150deg;
$circle-3-angle: -60deg;

@keyframes rotateTriangle {
    //CYCLE 1
    0% {
        transform: rotate(0);
    }
    10%{
    }
    100% {
        transform: rotate(360deg);
    }
}
//circle bound to center the triangle
.spinner-container{
    grid-column-start: 2;
    grid-column-end: 3;
    position: absolute;
    width: 100%;
    
    max-height: 60vh;
    max-width: 60vh;
    display: flex;
    justify-content: center;
    align-items: center;

    // right: 65px;
}
.spinner-container:after{
    content: "";
    display: block;
    padding-bottom: 100%;
}
.circleBound{
    position: absolute;

    width: $circleBoundRadius;
    height: $circleBoundRadius;

    // max-height: 60vh;
    // max-width: 60vh;
    border-radius: 999px;

    will-change: transform;
    animation-name: rotateTriangle;
    animation-duration: $animationDuration;
    animation-direction: normal;
    animation-timing-function: linear;
    background-color: rgba(255, 255, 255, 0.75);
}
.innerCircle{
    height: 100%;
    width: 100%;
    border-radius: 999px;
    border: 2px solid $borderColor;
    transform: rotate($container-angle);
}
.triangle-wrapper{
    width: $triangleEdge;
    height: $triangleHeight;
    position: relative;
    top: 100px;
    left: 100px;

    position: absolute;
    top: 0;
    left: calc(50% - #{$triangleEdge / 2});
}

.circle{
    height: $circleHeight;
    width: $circleWidth;
    border-radius: 999px;
    background-color: white;
    border: $circleBorder solid $borderColor;
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    will-change: transform;
    outline: 2px solid transparent;
    box-sizing: content-box;
    img{
        height: 80%;
        width: 80%;
    }
}
.circle-1{
    bottom: -$circleRadius;
    left: -$circleRadius;
}
.circle-2{
    top: -$circleRadius;
    left: calc(50% - #{$circleRadius});
}
.circle-3{
    bottom: -$circleRadius;
    right: -$circleRadius;
}
.circle{
    animation-duration: $animationDuration;
    animation-direction: normal;
    animation-timing-function: linear;
}
.circle, .circleBound{
    animation-iteration-count: infinite;
}
@keyframes rotateIcon-pos1{
    0%{
        transform: rotate($circle-1-angle);
    }
    100%{
        transform: rotate(#{$circle-1-angle - 360deg});
    }
}
.circle-1{
    animation-name: rotateIcon-pos1;
}
@keyframes rotateIcon-pos2{
    0%{
        transform: rotate($circle-2-angle);
    }
    100%{
        transform: rotate(#{$circle-2-angle - 360deg});
    }
}
.circle-2{
    animation-name: rotateIcon-pos2;
}
@keyframes rotateIcon-pos3{
    0%{
        transform: rotate($circle-3-angle);
    }
    100%{
        transform: rotate(#{$circle-3-angle - 360deg});
    }
}
.circle-3{
    animation-name: rotateIcon-pos3;
}
.circle:before{
    content: 'â€¢';
    position: absolute;
    bottom: -23px;
    left: 44%;
    color: red;
    font-size: 24px;
    z-index: 999;
}
.circle-inner{
    height: 100%;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 5px;
}
//circle bound to center the triangle
.circle-inner_1{
    transform: rotate(0deg);
}
.circle-inner_2{
    transform: rotate(-90deg);
}
.circle-inner_3{
    transform: rotate(120deg);
}

.triangle-edge{
    height: 5px;
    width: 5px;
    background-color: red;
    border-radius: 999px;
    position: absolute;

    transform-origin: top;
    z-index: 999;
    display: none;
}
.circle-1 .triangle-edge{
    transform: rotate(0deg);
}

//LABELS ------------------------------------------------------
$labelHeight: 30px;
.circle-label-wrapper{
    display: flex;
    position: absolute;
    flex: 1 1;
    justify-content: flex-start;
    font-size: $labelHeight;
    width: 120px;
    margin: 0 20px;
    height: $labelHeight;
    align-items: center;
    right: 100%;
}
.circle-label{
    position: absolute;
    bottom: 0;
    right: 0;
    line-height: $labelHeight;
    opacity: 0;

    animation-name: labelFade;
    animation-duration: $animationDuration;
    animation-direction: normal;
    animation-iteration-count: infinite;
}
@keyframes labelFade {
        0%{
        opacity: 0;
    }
        10%{
        opacity: 0;
    }
        30%{
        opacity: 1;
    }
        50%{
        opacity: 0;
    }
        100%{
        opacity: 0;
    }
  }

.circle-label_1{
    animation-delay: ($animationDuration / 3) * 0;
}
.circle-label_2{
    animation-delay: ($animationDuration / 3) * 2;
}
.circle-label_3{
    animation-delay: ($animationDuration / 3) * 1;
}
.anim-pause{
    animation-play-state: paused;
}
@media only screen and (max-width: 801px){
    .spinner-container{
        right: 0;
    }
    .circle:before{
        display: none;
    }
    .kv-image{
        left: 180px;
        padding: 0;
    }
}

@media only screen and (max-width: 688px){
    // .spinner-container{
    //     left: 180px;
    // }
}
